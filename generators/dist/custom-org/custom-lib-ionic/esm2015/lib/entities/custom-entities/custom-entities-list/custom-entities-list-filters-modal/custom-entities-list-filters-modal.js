/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { serializeModel, translate } from "@rucken/core";
import { keyToSelectInput, SelectInput, selectInputToKey } from "@rucken/ionic";
import { Transform, Type } from "class-transformer";
export class CustomEntitiesListFiltersModal {
    constructor() {
        this.id = undefined;
        this.sortField = undefined;
        this.sortType = undefined;
    }
}
CustomEntitiesListFiltersModal.strings = {
    sortField: translate("Sort field"),
    sortType: translate("Sort type")
};
CustomEntitiesListFiltersModal.sortFields = [
    { id: "id", title: translate("Id") },
    { id: "title", title: translate("Title") }
];
CustomEntitiesListFiltersModal.sortTypes = [
    { id: "asc", title: translate("Asc") },
    { id: "desc", title: translate("Desc") }
];
tslib_1.__decorate([
    Type(serializeModel(SelectInput)),
    Transform(keyToSelectInput({ items: CustomEntitiesListFiltersModal.sortFields }), { toClassOnly: true, groups: ["manual"] }),
    Transform(selectInputToKey({ items: CustomEntitiesListFiltersModal.sortFields }), { toPlainOnly: true, groups: ["manual"] }),
    tslib_1.__metadata("design:type", SelectInput)
], CustomEntitiesListFiltersModal.prototype, "sortField", void 0);
tslib_1.__decorate([
    Type(serializeModel(SelectInput)),
    Transform(keyToSelectInput({ items: CustomEntitiesListFiltersModal.sortTypes }), { toClassOnly: true, groups: ["manual"] }),
    Transform(selectInputToKey({ items: CustomEntitiesListFiltersModal.sortTypes }), { toPlainOnly: true, groups: ["manual"] }),
    tslib_1.__metadata("design:type", SelectInput)
], CustomEntitiesListFiltersModal.prototype, "sortType", void 0);
if (false) {
    /** @type {?} */
    CustomEntitiesListFiltersModal.strings;
    /** @type {?} */
    CustomEntitiesListFiltersModal.sortFields;
    /** @type {?} */
    CustomEntitiesListFiltersModal.sortTypes;
    /** @type {?} */
    CustomEntitiesListFiltersModal.prototype.id;
    /** @type {?} */
    CustomEntitiesListFiltersModal.prototype.sortField;
    /** @type {?} */
    CustomEntitiesListFiltersModal.prototype.sortType;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3VzdG9tLWVudGl0aWVzLWxpc3QtZmlsdGVycy1tb2RhbC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjdXN0b20tb3JnL2N1c3RvbS1saWItaW9uaWMvIiwic291cmNlcyI6WyJsaWIvZW50aXRpZXMvY3VzdG9tLWVudGl0aWVzL2N1c3RvbS1lbnRpdGllcy1saXN0L2N1c3RvbS1lbnRpdGllcy1saXN0LWZpbHRlcnMtbW9kYWwvY3VzdG9tLWVudGl0aWVzLWxpc3QtZmlsdGVycy1tb2RhbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFFTCxjQUFjLEVBRWQsU0FBUyxFQUNWLE1BQU0sY0FBYyxDQUFDO0FBQ3RCLE9BQU8sRUFFTCxnQkFBZ0IsRUFDaEIsV0FBVyxFQUNYLGdCQUFnQixFQUNqQixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBR3BELE1BQU0sT0FBTyw4QkFBOEI7SUFBM0M7UUFjRSxPQUFFLEdBQUcsU0FBUyxDQUFDO1FBV2YsY0FBUyxHQUFnQixTQUFTLENBQUM7UUFXbkMsYUFBUSxHQUFnQixTQUFTLENBQUM7SUFDcEMsQ0FBQzs7QUFwQ1Esc0NBQU8sR0FBRztJQUNmLFNBQVMsRUFBRSxTQUFTLENBQUMsWUFBWSxDQUFDO0lBQ2xDLFFBQVEsRUFBRSxTQUFTLENBQUMsV0FBVyxDQUFDO0NBQ2pDLENBQUM7QUFDSyx5Q0FBVSxHQUFrQjtJQUNqQyxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLFNBQVMsQ0FBQyxJQUFJLENBQUMsRUFBRTtJQUNwQyxFQUFFLEVBQUUsRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLFNBQVMsQ0FBQyxPQUFPLENBQUMsRUFBRTtDQUMzQyxDQUFDO0FBQ0ssd0NBQVMsR0FBa0I7SUFDaEMsRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxTQUFTLENBQUMsS0FBSyxDQUFDLEVBQUU7SUFDdEMsRUFBRSxFQUFFLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxTQUFTLENBQUMsTUFBTSxDQUFDLEVBQUU7Q0FDekMsQ0FBQztBQWFGO0lBVEMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUNqQyxTQUFTLENBQ1IsZ0JBQWdCLENBQUMsRUFBRSxLQUFLLEVBQUUsOEJBQThCLENBQUMsVUFBVSxFQUFFLENBQUMsRUFDdEUsRUFBRSxXQUFXLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQzFDO0lBQ0EsU0FBUyxDQUNSLGdCQUFnQixDQUFDLEVBQUUsS0FBSyxFQUFFLDhCQUE4QixDQUFDLFVBQVUsRUFBRSxDQUFDLEVBQ3RFLEVBQUUsV0FBVyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUMxQztzQ0FDVSxXQUFXO2lFQUFhO0FBV25DO0lBVEMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUNqQyxTQUFTLENBQ1IsZ0JBQWdCLENBQUMsRUFBRSxLQUFLLEVBQUUsOEJBQThCLENBQUMsU0FBUyxFQUFFLENBQUMsRUFDckUsRUFBRSxXQUFXLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQzFDO0lBQ0EsU0FBUyxDQUNSLGdCQUFnQixDQUFDLEVBQUUsS0FBSyxFQUFFLDhCQUE4QixDQUFDLFNBQVMsRUFBRSxDQUFDLEVBQ3JFLEVBQUUsV0FBVyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUMxQztzQ0FDUyxXQUFXO2dFQUFhOzs7SUFuQ2xDLHVDQUdFOztJQUNGLDBDQUdFOztJQUNGLHlDQUdFOztJQUVGLDRDQUFlOztJQUVmLG1EQVNtQzs7SUFFbkMsa0RBU2tDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgc2VyaWFsaXplSWRUb09iamVjdCxcbiAgc2VyaWFsaXplTW9kZWwsXG4gIHNlcmlhbGl6ZU9iamVjdFRvSWQsXG4gIHRyYW5zbGF0ZVxufSBmcm9tIFwiQHJ1Y2tlbi9jb3JlXCI7XG5pbXBvcnQge1xuICBDdXN0b21Vc2VyLFxuICBrZXlUb1NlbGVjdElucHV0LFxuICBTZWxlY3RJbnB1dCxcbiAgc2VsZWN0SW5wdXRUb0tleVxufSBmcm9tIFwiQHJ1Y2tlbi9pb25pY1wiO1xuaW1wb3J0IHsgVHJhbnNmb3JtLCBUeXBlIH0gZnJvbSBcImNsYXNzLXRyYW5zZm9ybWVyXCI7XG5pbXBvcnQgeyBJTW9kZWwgfSBmcm9tIFwibmd4LXJlcG9zaXRvcnlcIjtcblxuZXhwb3J0IGNsYXNzIEN1c3RvbUVudGl0aWVzTGlzdEZpbHRlcnNNb2RhbCBpbXBsZW1lbnRzIElNb2RlbCB7XG4gIHN0YXRpYyBzdHJpbmdzID0ge1xuICAgIHNvcnRGaWVsZDogdHJhbnNsYXRlKFwiU29ydCBmaWVsZFwiKSxcbiAgICBzb3J0VHlwZTogdHJhbnNsYXRlKFwiU29ydCB0eXBlXCIpXG4gIH07XG4gIHN0YXRpYyBzb3J0RmllbGRzOiBTZWxlY3RJbnB1dFtdID0gW1xuICAgIHsgaWQ6IFwiaWRcIiwgdGl0bGU6IHRyYW5zbGF0ZShcIklkXCIpIH0sXG4gICAgeyBpZDogXCJ0aXRsZVwiLCB0aXRsZTogdHJhbnNsYXRlKFwiVGl0bGVcIikgfVxuICBdO1xuICBzdGF0aWMgc29ydFR5cGVzOiBTZWxlY3RJbnB1dFtdID0gW1xuICAgIHsgaWQ6IFwiYXNjXCIsIHRpdGxlOiB0cmFuc2xhdGUoXCJBc2NcIikgfSxcbiAgICB7IGlkOiBcImRlc2NcIiwgdGl0bGU6IHRyYW5zbGF0ZShcIkRlc2NcIikgfVxuICBdO1xuXG4gIGlkID0gdW5kZWZpbmVkO1xuXG4gIEBUeXBlKHNlcmlhbGl6ZU1vZGVsKFNlbGVjdElucHV0KSlcbiAgQFRyYW5zZm9ybShcbiAgICBrZXlUb1NlbGVjdElucHV0KHsgaXRlbXM6IEN1c3RvbUVudGl0aWVzTGlzdEZpbHRlcnNNb2RhbC5zb3J0RmllbGRzIH0pLFxuICAgIHsgdG9DbGFzc09ubHk6IHRydWUsIGdyb3VwczogW1wibWFudWFsXCJdIH1cbiAgKVxuICBAVHJhbnNmb3JtKFxuICAgIHNlbGVjdElucHV0VG9LZXkoeyBpdGVtczogQ3VzdG9tRW50aXRpZXNMaXN0RmlsdGVyc01vZGFsLnNvcnRGaWVsZHMgfSksXG4gICAgeyB0b1BsYWluT25seTogdHJ1ZSwgZ3JvdXBzOiBbXCJtYW51YWxcIl0gfVxuICApXG4gIHNvcnRGaWVsZDogU2VsZWN0SW5wdXQgPSB1bmRlZmluZWQ7XG5cbiAgQFR5cGUoc2VyaWFsaXplTW9kZWwoU2VsZWN0SW5wdXQpKVxuICBAVHJhbnNmb3JtKFxuICAgIGtleVRvU2VsZWN0SW5wdXQoeyBpdGVtczogQ3VzdG9tRW50aXRpZXNMaXN0RmlsdGVyc01vZGFsLnNvcnRUeXBlcyB9KSxcbiAgICB7IHRvQ2xhc3NPbmx5OiB0cnVlLCBncm91cHM6IFtcIm1hbnVhbFwiXSB9XG4gIClcbiAgQFRyYW5zZm9ybShcbiAgICBzZWxlY3RJbnB1dFRvS2V5KHsgaXRlbXM6IEN1c3RvbUVudGl0aWVzTGlzdEZpbHRlcnNNb2RhbC5zb3J0VHlwZXMgfSksXG4gICAgeyB0b1BsYWluT25seTogdHJ1ZSwgZ3JvdXBzOiBbXCJtYW51YWxcIl0gfVxuICApXG4gIHNvcnRUeXBlOiBTZWxlY3RJbnB1dCA9IHVuZGVmaW5lZDtcbn1cbiJdfQ==