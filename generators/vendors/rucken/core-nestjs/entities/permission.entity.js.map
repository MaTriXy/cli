{"version":3,"file":"permission.entity.js","sourceRoot":"","sources":["../../../../libs/rucken/core-nestjs/src/entities/permission.entity.ts"],"names":[],"mappings":";;;AAAA,qDAAsE;AACtE,qCAUiB;AACjB,yEAA8D;AAC9D,2DAAiD;AACjD,mFAA8E;AAG9E,IAAa,UAAU,GAAvB,MAAa,UAAU;IADvB;QAGE,OAAE,GAAW,SAAS,CAAC;QAKvB,SAAI,GAAW,SAAS,CAAC;QAKzB,UAAK,GAAW,SAAS,CAAC;QAI1B,gBAAW,GAAgB,SAAS,CAAC;IAgCvC,CAAC;IAdC,iBAAiB;QACf,MAAM,MAAM,GAAG,8BAAY,CAAC,IAAI,EAAE,EAAE,eAAe,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;QAC1E,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YACrB,MAAM,IAAI,+CAAqB,CAAC,MAAM,CAAC,CAAC;SACzC;IACH,CAAC;IAGD,cAAc;QACZ,MAAM,MAAM,GAAG,8BAAY,CAAC,IAAI,EAAE,EAAE,eAAe,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;QAC1E,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YACrB,MAAM,IAAI,+CAAqB,CAAC,MAAM,CAAC,CAAC;SACzC;IACH,CAAC;CACF,CAAA;AA9CC;IADC,gCAAsB,EAAE;;sCACF;AAKvB;IAHC,gBAAM,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;IACvB,4BAAU,EAAE;IACZ,2BAAS,CAAC,GAAG,CAAC;;wCACU;AAKzB;IAHC,gBAAM,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;IACvB,4BAAU,EAAE;IACZ,2BAAS,CAAC,GAAG,CAAC;;yCACW;AAI1B;IAFC,mBAAS,CAAC,IAAI,CAAC,EAAE,CAAC,iCAAW,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;IAC/D,oBAAU,CAAC,EAAE,IAAI,EAAE,iBAAiB,EAAE,CAAC;sCAC3B,iCAAW;+CAAa;AAerC;IAbC,oBAAU,CAAC,IAAI,CAAC,EAAE,CAAC,oBAAK,CAAC;IACzB,mBAAS,CAAC;QAET,IAAI,EAAE,mBAAmB;QACzB,UAAU,EAAE;YACV,IAAI,EAAE,eAAe;YACrB,oBAAoB,EAAE,IAAI;SAC3B;QACD,iBAAiB,EAAE;YACjB,IAAI,EAAE,UAAU;YAChB,oBAAoB,EAAE,IAAI;SAC3B;KACF,CAAC;;0CACc;AAGhB;IADC,sBAAY,EAAE;;;;mDAMd;AAGD;IADC,sBAAY,EAAE;;;;gDAMd;AA/CU,UAAU;IADtB,gBAAM,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE,CAAC;GACnB,UAAU,CAgDtB;AAhDY,gCAAU","sourcesContent":["import { IsNotEmpty, MaxLength, validateSync } from 'class-validator';\nimport {\n  BeforeInsert,\n  BeforeUpdate,\n  Column,\n  Entity,\n  JoinColumn,\n  JoinTable,\n  ManyToMany,\n  ManyToOne,\n  PrimaryGeneratedColumn\n} from 'typeorm';\nimport { ContentType } from '../entities/content-type.entity';\nimport { Group } from '../entities/group.entity';\nimport { CustomValidationError } from '../exceptions/custom-validation.error';\n\n@Entity({ name: 'permissions' })\nexport class Permission {\n  @PrimaryGeneratedColumn()\n  id: number = undefined;\n\n  @Column({ length: 100 })\n  @IsNotEmpty()\n  @MaxLength(100)\n  name: string = undefined;\n\n  @Column({ length: 255 })\n  @IsNotEmpty()\n  @MaxLength(255)\n  title: string = undefined;\n\n  @ManyToOne(type => ContentType, { eager: true, nullable: true })\n  @JoinColumn({ name: 'content_type_id' })\n  contentType: ContentType = undefined;\n\n  @ManyToMany(type => Group)\n  @JoinTable({\n    // not work on run cli migration:\n    name: 'group_permissions',\n    joinColumn: {\n      name: 'permission_id',\n      referencedColumnName: 'id'\n    },\n    inverseJoinColumn: {\n      name: 'group_id',\n      referencedColumnName: 'id'\n    }\n  })\n  groups: Group[];\n\n  @BeforeInsert()\n  doBeforeInsertion() {\n    const errors = validateSync(this, { validationError: { target: false } });\n    if (errors.length > 0) {\n      throw new CustomValidationError(errors);\n    }\n  }\n\n  @BeforeUpdate()\n  doBeforeUpdate() {\n    const errors = validateSync(this, { validationError: { target: false } });\n    if (errors.length > 0) {\n      throw new CustomValidationError(errors);\n    }\n  }\n}\n"]}