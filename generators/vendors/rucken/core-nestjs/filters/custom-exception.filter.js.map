{"version":3,"file":"custom-exception.filter.js","sourceRoot":"","sources":["../../../../libs/rucken/core-nestjs/src/filters/custom-exception.filter.ts"],"names":[],"mappings":"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","sourcesContent":["import { ArgumentsHost, Catch, ExceptionFilter, HttpException, HttpStatus, Inject, Logger } from '@nestjs/common';\nimport { ValidationError } from 'class-validator';\nimport { CORE_CONFIG_TOKEN } from '../configs/core.config';\nimport { CustomValidationError } from '../exceptions/custom-validation.error';\nimport { CustomError } from '../exceptions/custom.error';\nimport { ICoreConfig } from '../interfaces/core-config.interface';\n\n@Catch(SyntaxError, CustomValidationError, CustomError, HttpException)\nexport class CustomExceptionFilter implements ExceptionFilter {\n  constructor(@Inject(CORE_CONFIG_TOKEN) private readonly coreConfig: ICoreConfig) {}\n\n  private response(\n    exception: CustomValidationError | SyntaxError | Error | HttpException,\n    host: ArgumentsHost,\n    data: any,\n    status?: number\n  ) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    Logger.error(JSON.stringify(exception), undefined, CustomExceptionFilter.name);\n    if (request.originalUrl.indexOf('/api/') !== 0 && request.accepts('html') && this.coreConfig.indexFile) {\n      response.sendFile(this.coreConfig.indexFile);\n    } else {\n      response.status(status ? status : HttpStatus.BAD_REQUEST).json(data);\n    }\n  }\n\n  catch(exception: CustomValidationError | SyntaxError | Error | HttpException, host: ArgumentsHost) {\n    const errors = {};\n    if (exception instanceof CustomValidationError) {\n      exception.errors.forEach((error: ValidationError) => {\n        Object.keys(error.constraints).forEach((key: string) => {\n          if (!errors[error.property]) {\n            errors[error.property] = [];\n          }\n          errors[error.property].push(error.constraints[key]);\n        });\n      });\n      this.response(exception, host, {\n        validationErrors: errors\n      });\n    }\n    if (exception instanceof CustomError) {\n      this.response(exception, host, {\n        message: exception.message\n      });\n    }\n    if (exception instanceof SyntaxError) {\n      this.response(exception, host, {\n        message: 'Syntax error'\n      });\n    }\n    if (exception instanceof HttpException) {\n      this.response(\n        exception,\n        host,\n        {\n          message: exception.message && exception.message.message ? exception.message.message : 'Http exception'\n        },\n        exception.getStatus()\n      );\n    }\n  }\n}\n"]}