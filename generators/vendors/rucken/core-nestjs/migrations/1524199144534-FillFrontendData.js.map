{"version":3,"file":"1524199144534-FillFrontendData.js","sourceRoot":"","sources":["../../../../libs/rucken/core-nestjs/src/migrations/1524199144534-FillFrontendData.ts"],"names":[],"mappings":";;;AAAA,yDAAiD;AAEjD,kGAAoG;AACpG,oFAAuF;AACvF,8FAAiG;AAEjG,MAAa,6BAA6B;IAC3B,EAAE,CAAC,WAAwB;;YACtC,MAAM,KAAK,GAAG,MAAM,WAAW,CAAC,OAAO,CAAC,aAAa,CAAqB,iCAAkB,CAAC,CAAC,aAAa,CAAC;gBAC1G,KAAK,EAAE;oBACL,IAAI,EAAE,MAAM;iBACb;gBACD,SAAS,EAAE,CAAC,aAAa,CAAC;aAC3B,CAAC,CAAC;YACH,MAAM,MAAM,GAAG,MAAM,WAAW,CAAC,OAAO,CAAC,aAAa,CAAqB,iCAAkB,CAAC,CAAC,aAAa,CAAC;gBAC3G,KAAK,EAAE;oBACL,IAAI,EAAE,OAAO;iBACd;gBACD,SAAS,EAAE,CAAC,aAAa,CAAC;aAC3B,CAAC,CAAC;YACH,MAAM,MAAM,GAAG,MAAM,WAAW,CAAC,OAAO;iBACrC,aAAa,CAA2B,8CAAwB,CAAC;iBACjE,aAAa,CAAC;gBACb,KAAK,EAAE;oBACL,IAAI,EAAE,MAAM;iBACb;aACF,CAAC,CAAC;YACL,MAAM,gBAAgB,GAAG;gBACvB,kBAAkB,EAAE,sBAAsB;gBAC1C,mBAAmB,EAAE,uBAAuB;gBAC5C,oBAAoB,EAAE,wBAAwB;gBAC9C,iBAAiB,EAAE,qBAAqB;gBACxC,mBAAmB,EAAE,uBAAuB;gBAC5C,kBAAkB,EAAE,sBAAsB;aAC3C,CAAC;YACF,MAAM,kBAAkB,GAAG,EAAE,CAAC;YAC9B,KAAK,MAAM,eAAe,IAAI,gBAAgB,EAAE;gBAC9C,IAAI,gBAAgB,CAAC,cAAc,CAAC,eAAe,CAAC,EAAE;oBACpD,kBAAkB,CAAC,IAAI,CAAC;wBACtB,KAAK,EAAE,gBAAgB,CAAC,eAAe,CAAC;wBACxC,IAAI,EAAE,eAAe;wBACrB,WAAW,EAAE,MAAM;qBACpB,CAAC,CAAC;iBACJ;aACF;YACD,MAAM,WAAW,GAAG,MAAM,WAAW,CAAC,OAAO;iBAC1C,aAAa,CAA0B,2CAAuB,CAAC;iBAC/D,IAAI,CAAC,gCAAY,CAAC,2CAAuB,EAAE,kBAAkB,CAAC,CAAC,CAAC;YACnE,KAAK,CAAC,WAAW,GAAG;gBAClB,GAAG,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,gBAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBAC7E,GAAG,WAAW,CAAC,MAAM,CACnB,UAAU,CAAC,EAAE,CAAC,CAAC,kBAAkB,EAAE,mBAAmB,EAAE,oBAAoB,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAC9G;aACF,CAAC;YACF,MAAM,CAAC,WAAW,GAAG;gBACnB,GAAG,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,gBAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBAC9E,GAAG,WAAW;aACf,CAAC;YACF,MAAM,MAAM,GAAG,MAAM,WAAW,CAAC,OAAO;iBACrC,aAAa,CAAqB,iCAAkB,CAAC;iBACrD,IAAI,CAAC,gCAAY,CAAC,iCAAkB,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;QAC7D,CAAC;KAAA;IAEY,IAAI,CAAC,WAAwB;sEAAiB,CAAC;KAAA;CAC7D;AA1DD,sEA0DC","sourcesContent":["import { plainToClass } from 'class-transformer';\nimport { MigrationInterface, QueryRunner } from 'typeorm';\nimport { ContentType1524199022084 } from '../migrations_entities/1524199022084/content-type.entity';\nimport { Group1524199022084 } from '../migrations_entities/1524199022084/group.entity';\nimport { Permission1524199022084 } from '../migrations_entities/1524199022084/permission.entity';\n\nexport class FillFrontendData1524199144534 implements MigrationInterface {\n  public async up(queryRunner: QueryRunner): Promise<any> {\n    const gUser = await queryRunner.manager.getRepository<Group1524199022084>(Group1524199022084).findOneOrFail({\n      where: {\n        name: 'user'\n      },\n      relations: ['permissions']\n    });\n    const gAdmin = await queryRunner.manager.getRepository<Group1524199022084>(Group1524199022084).findOneOrFail({\n      where: {\n        name: 'admin'\n      },\n      relations: ['permissions']\n    });\n    const ctUser = await queryRunner.manager\n      .getRepository<ContentType1524199022084>(ContentType1524199022084)\n      .findOneOrFail({\n        where: {\n          name: 'user'\n        }\n      });\n    const permissionTitles = {\n      'read_themes-page': 'Can read themes page',\n      'read_account-page': 'Can read account page',\n      'read_profile-frame': 'Can read profile frame',\n      'read_admin-page': 'Can read admin page',\n      'read_groups-frame': 'Can read groups frame',\n      'read_users-frame': 'Can read users frame'\n    };\n    const permissionsObjects = [];\n    for (const permissionTitle in permissionTitles) {\n      if (permissionTitles.hasOwnProperty(permissionTitle)) {\n        permissionsObjects.push({\n          title: permissionTitles[permissionTitle],\n          name: permissionTitle,\n          contentType: ctUser\n        });\n      }\n    }\n    const permissions = await queryRunner.manager\n      .getRepository<Permission1524199022084>(Permission1524199022084)\n      .save(plainToClass(Permission1524199022084, permissionsObjects));\n    gUser.permissions = [\n      ...gUser.permissions.filter(permission => !permissionTitles[permission.name]),\n      ...permissions.filter(\n        permission => ['read_themes-page', 'read_account-page', 'read_profile-frame'].indexOf(permission.name) !== -1\n      )\n    ];\n    gAdmin.permissions = [\n      ...gAdmin.permissions.filter(permission => !permissionTitles[permission.name]),\n      ...permissions\n    ];\n    const groups = await queryRunner.manager\n      .getRepository<Group1524199022084>(Group1524199022084)\n      .save(plainToClass(Group1524199022084, [gUser, gAdmin]));\n  }\n\n  public async down(queryRunner: QueryRunner): Promise<any> {}\n}\n"]}