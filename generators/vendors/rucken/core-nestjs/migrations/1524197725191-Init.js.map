{"version":3,"file":"1524197725191-Init.js","sourceRoot":"","sources":["../../../../libs/rucken/core-nestjs/src/migrations/1524197725191-Init.ts"],"names":[],"mappings":"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","sourcesContent":["import { MigrationInterface, QueryRunner, Table, TableColumn, TableForeignKey, TableIndex } from 'typeorm';\n\nexport class Init1524197725191 implements MigrationInterface {\n  public async up(queryRunner: QueryRunner): Promise<any> {\n    await queryRunner.createTable(\n      new Table({\n        name: 'users',\n        columns: [\n          {\n            name: 'id',\n            type: 'integer'\n          },\n          {\n            name: 'password',\n            type: 'varchar(128)',\n            isNullable: false\n          },\n          {\n            name: 'is_superuser',\n            type: 'boolean',\n            isNullable: false\n          },\n          {\n            name: 'is_staff',\n            type: 'boolean',\n            isNullable: false\n          },\n          {\n            name: 'is_active',\n            type: 'boolean',\n            isNullable: false\n          },\n          {\n            name: 'username',\n            type: 'varchar(150)',\n            isNullable: false\n          },\n          {\n            name: 'first_name',\n            type: 'varchar(30)',\n            isNullable: true\n          },\n          {\n            name: 'last_name',\n            type: 'varchar(30)',\n            isNullable: true\n          },\n          {\n            name: 'email',\n            type: 'varchar(254)',\n            isNullable: false\n          },\n          {\n            name: 'last_login',\n            type: queryRunner.connection.driver.mappedDataTypes.createDate.toString(),\n            default: queryRunner.connection.driver.mappedDataTypes.updateDateDefault\n          },\n          {\n            name: 'date_joined',\n            type: queryRunner.connection.driver.mappedDataTypes.createDate.toString(),\n            isNullable: false,\n            default: queryRunner.connection.driver.mappedDataTypes.createDateDefault\n          },\n          {\n            name: 'date_of_birth',\n            type: queryRunner.connection.driver.mappedDataTypes.createDate.toString(),\n            isNullable: true\n          }\n        ]\n      }),\n      true\n    );\n    await queryRunner.changeColumn(\n      'users',\n      'id',\n      new TableColumn({\n        name: 'id',\n        type: 'integer',\n        isPrimary: true,\n        isGenerated: true,\n        generationStrategy: 'increment'\n      })\n    );\n    if (!(queryRunner.connection.driver as any).sqlite) {\n      await queryRunner.createIndex(\n        'users',\n        new TableIndex({\n          name: 'IDX_USE_E',\n          columnNames: ['email']\n        })\n      );\n      await queryRunner.createIndex(\n        'users',\n        new TableIndex({\n          name: 'UQ_USE_U',\n          isUnique: true,\n          columnNames: ['username']\n        })\n      );\n    }\n    await queryRunner.createTable(\n      new Table({\n        name: 'groups',\n        columns: [\n          {\n            name: 'id',\n            type: 'integer'\n          },\n          {\n            name: 'name',\n            type: 'varchar(100)',\n            isNullable: false\n          },\n          {\n            name: 'title',\n            type: 'varchar(255)',\n            isNullable: false\n          }\n        ]\n      }),\n      true\n    );\n    await queryRunner.changeColumn(\n      'groups',\n      'id',\n      new TableColumn({\n        name: 'id',\n        type: 'integer',\n        isPrimary: true,\n        isGenerated: true,\n        generationStrategy: 'increment'\n      })\n    );\n    if (!(queryRunner.connection.driver as any).sqlite) {\n      await queryRunner.createIndex(\n        'groups',\n        new TableIndex({\n          name: 'UQ_GRO_N',\n          isUnique: true,\n          columnNames: ['name']\n        })\n      );\n      await queryRunner.createIndex(\n        'groups',\n        new TableIndex({\n          name: 'UQ_GRO_T',\n          isUnique: true,\n          columnNames: ['title']\n        })\n      );\n    }\n    await queryRunner.createTable(\n      new Table({\n        name: 'content_types',\n        columns: [\n          {\n            name: 'id',\n            type: 'integer'\n          },\n          {\n            name: 'name',\n            type: 'varchar(100)',\n            isNullable: false\n          },\n          {\n            name: 'title',\n            type: 'varchar(255)',\n            isNullable: false\n          }\n        ]\n      }),\n      true\n    );\n    await queryRunner.changeColumn(\n      'content_types',\n      'id',\n      new TableColumn({\n        name: 'id',\n        type: 'integer',\n        isPrimary: true,\n        isGenerated: true,\n        generationStrategy: 'increment'\n      })\n    );\n    await queryRunner.createTable(\n      new Table({\n        name: 'permissions',\n        columns: [\n          {\n            name: 'id',\n            type: 'integer'\n          },\n          {\n            name: 'name',\n            type: 'varchar(100)',\n            isNullable: false\n          },\n          {\n            name: 'title',\n            type: 'varchar(255)',\n            isNullable: false\n          },\n          {\n            name: 'content_type_id',\n            type: 'integer'\n          }\n        ]\n      }),\n      true\n    );\n    await queryRunner.changeColumn(\n      'permissions',\n      'id',\n      new TableColumn({\n        name: 'id',\n        type: 'integer',\n        isPrimary: true,\n        isGenerated: true,\n        generationStrategy: 'increment'\n      })\n    );\n    if (!(queryRunner.connection.driver as any).sqlite) {\n      await queryRunner.createForeignKey(\n        'permissions',\n        new TableForeignKey({\n          name: 'FK_PER_C_T_ID',\n          columnNames: ['content_type_id'],\n          referencedColumnNames: ['id'],\n          referencedTableName: 'content_types',\n          onDelete: 'CASCADE'\n        })\n      );\n      await queryRunner.createIndex(\n        'permissions',\n        new TableIndex({\n          name: 'IDX_PER_C_T_ID',\n          columnNames: ['content_type_id']\n        })\n      );\n    }\n    await queryRunner.createTable(\n      new Table({\n        name: 'user_groups',\n        columns: [\n          {\n            name: 'user_id',\n            type: 'integer',\n            isNullable: false,\n            isPrimary: true\n          },\n          {\n            name: 'group_id',\n            type: 'integer',\n            isNullable: false,\n            isPrimary: true\n          }\n        ]\n      }),\n      true\n    );\n    if (!(queryRunner.connection.driver as any).sqlite) {\n      await queryRunner.createForeignKey(\n        'user_groups',\n        new TableForeignKey({\n          name: 'FK_USE_GRO_U_ID',\n          columnNames: ['user_id'],\n          referencedColumnNames: ['id'],\n          referencedTableName: 'users',\n          onDelete: 'CASCADE'\n        })\n      );\n      await queryRunner.createIndex(\n        'user_groups',\n        new TableIndex({\n          name: 'IDX_USE_GRO_U_ID',\n          columnNames: ['user_id']\n        })\n      );\n      await queryRunner.createForeignKey(\n        'user_groups',\n        new TableForeignKey({\n          name: 'FK_USE_GRO_G_ID',\n          columnNames: ['group_id'],\n          referencedColumnNames: ['id'],\n          referencedTableName: 'groups',\n          onDelete: 'CASCADE'\n        })\n      );\n      await queryRunner.createIndex(\n        'user_groups',\n        new TableIndex({\n          name: 'IDX_USE_GRO_G_ID',\n          columnNames: ['group_id']\n        })\n      );\n    }\n    await queryRunner.createTable(\n      new Table({\n        name: 'group_permissions',\n        columns: [\n          {\n            name: 'group_id',\n            type: 'integer',\n            isNullable: false,\n            isPrimary: true\n          },\n          {\n            name: 'permission_id',\n            type: 'integer',\n            isNullable: false,\n            isPrimary: true\n          }\n        ]\n      }),\n      true\n    );\n    if (!(queryRunner.connection.driver as any).sqlite) {\n      await queryRunner.createForeignKey(\n        'group_permissions',\n        new TableForeignKey({\n          name: 'FK_GRO_PER_G_ID',\n          columnNames: ['group_id'],\n          referencedColumnNames: ['id'],\n          referencedTableName: 'groups',\n          onDelete: 'CASCADE'\n        })\n      );\n      await queryRunner.createIndex(\n        'group_permissions',\n        new TableIndex({\n          name: 'IDX_GRO_PER_G_ID',\n          columnNames: ['group_id']\n        })\n      );\n      await queryRunner.createForeignKey(\n        'group_permissions',\n        new TableForeignKey({\n          name: 'FK_GRO_PER_P_ID',\n          columnNames: ['permission_id'],\n          referencedColumnNames: ['id'],\n          referencedTableName: 'permissions',\n          onDelete: 'CASCADE'\n        })\n      );\n      await queryRunner.createIndex(\n        'group_permissions',\n        new TableIndex({\n          name: 'IDX_GRO_PER_P_ID',\n          columnNames: ['permission_id']\n        })\n      );\n    }\n  }\n\n  public async down(queryRunner: QueryRunner): Promise<any> {}\n}\n"]}