{"version":3,"file":"users.controller.js","sourceRoot":"","sources":["../../../../libs/rucken/core-nestjs/src/controllers/users.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Inject,\n  MethodNotAllowedException,\n  Param,\n  ParseIntPipe,\n  Post,\n  Put,\n  Query\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiImplicitParam, ApiImplicitQuery, ApiResponse, ApiUseTags } from '@nestjs/swagger';\nimport { plainToClass } from 'class-transformer';\nimport { CORE_CONFIG_TOKEN } from '../configs/core.config';\nimport { Permissions } from '../decorators/permissions.decorator';\nimport { Roles } from '../decorators/roles.decorator';\nimport { InCreateUserDto } from '../dto/in-create-user.dto';\nimport { InUserDto } from '../dto/in-user.dto';\nimport { OutUserDto } from '../dto/out-user.dto';\nimport { OutUsersDto } from '../dto/out-users.dto';\nimport { User } from '../entities/user.entity';\nimport { ICoreConfig } from '../interfaces/core-config.interface';\nimport { ParseIntWithDefaultPipe } from '../pipes/parse-int-with-default.pipe';\nimport { UsersService } from '../services/users.service';\n\n@ApiUseTags('users')\n@ApiBearerAuth()\n@Controller('/api/users')\nexport class UsersController {\n  constructor(\n    @Inject(CORE_CONFIG_TOKEN) private readonly coreConfig: ICoreConfig,\n    private readonly service: UsersService\n  ) {}\n\n  @Roles('isSuperuser')\n  @Permissions('add_user')\n  @HttpCode(HttpStatus.CREATED)\n  @ApiResponse({\n    status: HttpStatus.CREATED,\n    type: OutUserDto,\n    description: 'The record has been successfully created.'\n  })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, description: 'Forbidden.' })\n  @Post()\n  async create(@Body() dto: InCreateUserDto) {\n    if (dto.isSuperuser && this.coreConfig.demo) {\n      throw new MethodNotAllowedException('Not allowed in DEMO mode');\n    }\n    try {\n      return plainToClass(\n        OutUserDto,\n        await this.service.create({\n          item: await plainToClass(User, dto).setPassword(dto.password)\n        })\n      );\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  @Roles('isSuperuser')\n  @Permissions('change_user')\n  @HttpCode(HttpStatus.OK)\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: OutUserDto,\n    description: 'The record has been successfully updated.'\n  })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, description: 'Forbidden.' })\n  @ApiImplicitParam({ name: 'id', type: Number })\n  @Put(':id')\n  async update(@Param('id', new ParseIntPipe()) id, @Body() dto: InUserDto) {\n    if (this.coreConfig.demo) {\n      throw new MethodNotAllowedException('Not allowed in DEMO mode');\n    }\n    try {\n      return plainToClass(\n        OutUserDto,\n        await this.service.update({\n          id,\n          item: await plainToClass(User, dto).setPassword(dto.password)\n        })\n      );\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  @Roles('isSuperuser')\n  @Permissions('delete_user')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiResponse({\n    status: HttpStatus.NO_CONTENT,\n    description: 'The record has been successfully deleted.'\n  })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, description: 'Forbidden.' })\n  @ApiImplicitParam({ name: 'id', type: Number })\n  @Delete(':id')\n  async delete(@Param('id', new ParseIntPipe()) id) {\n    if (this.coreConfig.demo) {\n      throw new MethodNotAllowedException('Not allowed in DEMO mode');\n    }\n    try {\n      return plainToClass(\n        OutUserDto,\n        await this.service.delete({\n          id\n        })\n      );\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  @Roles('isSuperuser')\n  @Permissions('read_user')\n  @HttpCode(HttpStatus.OK)\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: OutUserDto,\n    description: ''\n  })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, description: 'Forbidden.' })\n  @ApiImplicitParam({ name: 'id', type: Number })\n  @Get(':id')\n  async findById(@Param('id', new ParseIntPipe()) id) {\n    try {\n      return plainToClass(\n        OutUserDto,\n        await this.service.findById({\n          id\n        })\n      );\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  @Roles('isSuperuser')\n  @Permissions('read_user')\n  @HttpCode(HttpStatus.OK)\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: OutUsersDto,\n    description: ''\n  })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, description: 'Forbidden.' })\n  @ApiImplicitQuery({\n    name: 'q',\n    required: false,\n    type: String,\n    description: 'Text for search (default: empty)'\n  })\n  @ApiImplicitQuery({\n    name: 'sort',\n    required: false,\n    type: String,\n    description: 'Column name for sort (default: -id)'\n  })\n  @ApiImplicitQuery({\n    name: 'per_page',\n    required: false,\n    type: Number,\n    description: 'Number of results to return per page. (default: 10)'\n  })\n  @ApiImplicitQuery({\n    name: 'cur_page',\n    required: false,\n    type: Number,\n    description: 'A page number within the paginated result set. (default: 1)'\n  })\n  @ApiImplicitQuery({\n    name: 'group',\n    required: false,\n    type: Number,\n    description: 'Group id for filter data by group. (default: empty)'\n  })\n  @Get()\n  async findAll(\n    @Query('cur_page', new ParseIntWithDefaultPipe(1)) curPage,\n    @Query('per_page', new ParseIntWithDefaultPipe(10)) perPage,\n    @Query('q') q,\n    @Query('group') group,\n    @Query('sort') sort\n  ) {\n    try {\n      return plainToClass(\n        OutUsersDto,\n        await this.service.findAll({\n          curPage,\n          perPage,\n          q,\n          sort,\n          group\n        })\n      );\n    } catch (error) {\n      throw error;\n    }\n  }\n}\n"]}