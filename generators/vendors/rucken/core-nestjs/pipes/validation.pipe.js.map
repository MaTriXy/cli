{"version":3,"file":"validation.pipe.js","sourceRoot":"","sources":["../../../../libs/rucken/core-nestjs/src/pipes/validation.pipe.ts"],"names":[],"mappings":";;;AAAA,2CAA4C;AAE5C,yDAAiD;AACjD,qDAA2C;AAC3C,mFAA8E;AAG9E,IAAa,cAAc,GAA3B,MAAa,cAAc;IACZ,SAAS,CAAC,KAAK,EAAE,QAA0B;;YACtD,MAAM,EAAE,QAAQ,EAAE,GAAG,QAAQ,CAAC;YAC9B,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;gBAC3C,OAAO,KAAK,CAAC;aACd;YACD,MAAM,MAAM,GAAG,gCAAY,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;YAC7C,MAAM,MAAM,GAAG,MAAM,0BAAQ,CAAC,MAAM,EAAE;gBACpC,eAAe,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE;aACnC,CAAC,CAAC;YACH,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;gBACrB,MAAM,IAAI,+CAAqB,CAAC,MAAM,CAAC,CAAC;aACzC;YACD,OAAO,MAAM,CAAC;QAChB,CAAC;KAAA;IAEO,UAAU,CAAC,QAAQ;QACzB,MAAM,KAAK,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;QACvD,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,KAAK,IAAI,CAAC,IAAI,QAAQ,CAAC;IAC5D,CAAC;CACF,CAAA;AApBY,cAAc;IAD1B,mBAAU,EAAE;GACA,cAAc,CAoB1B;AApBY,wCAAc","sourcesContent":["import { Injectable } from '@nestjs/common';\nimport { ArgumentMetadata, PipeTransform } from '@nestjs/common/interfaces';\nimport { plainToClass } from 'class-transformer';\nimport { validate } from 'class-validator';\nimport { CustomValidationError } from '../exceptions/custom-validation.error';\n\n@Injectable()\nexport class ValidationPipe implements PipeTransform<any> {\n  public async transform(value, metadata: ArgumentMetadata) {\n    const { metatype } = metadata;\n    if (!metatype || !this.toValidate(metatype)) {\n      return value;\n    }\n    const entity = plainToClass(metatype, value);\n    const errors = await validate(entity, {\n      validationError: { target: false }\n    });\n    if (errors.length > 0) {\n      throw new CustomValidationError(errors);\n    }\n    return entity;\n  }\n\n  private toValidate(metatype): boolean {\n    const types = [String, Boolean, Number, Array, Object];\n    return !types.find(type => metatype === type) && metatype;\n  }\n}\n"]}