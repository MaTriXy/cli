{"version":3,"file":"content-types.service.js","sourceRoot":"","sources":["../../../../libs/rucken/core-nestjs/src/services/content-types.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { ContentType } from '../entities/content-type.entity';\n\n@Injectable()\nexport class ContentTypesService {\n  constructor(\n    @InjectRepository(ContentType)\n    private readonly repository: Repository<ContentType>\n  ) {}\n\n  async create(options: { item: ContentType }) {\n    try {\n      options.item = await this.repository.save(options.item);\n      return { contentType: options.item };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async update(options: { id: number; item: ContentType }) {\n    options.item.id = options.id;\n    try {\n      options.item = await this.repository.save(options.item);\n      return { contentType: options.item };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async delete(options: { id: number }) {\n    try {\n      let item = await this.repository.findOneOrFail(options.id, {\n        relations: ['permissions']\n      });\n      item.permissions = [];\n      item = await this.repository.save(item);\n      await this.repository.delete(options.id);\n      return { contentType: null };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async findById(options: { id: number }) {\n    try {\n      const item = await this.repository.findOneOrFail(options.id, {\n        relations: ['permissions']\n      });\n      return { contentType: item };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async findAll(options: { curPage: number; perPage: number; q?: string; sort?: string }) {\n    try {\n      let objects: [ContentType[], number];\n      let qb = this.repository.createQueryBuilder('contentType');\n      if (options.q) {\n        qb = qb.where('contentType.name like :q or contentType.title like :q or contentType.id = :id', {\n          q: `%${options.q}%`,\n          id: +options.q\n        });\n      }\n      options.sort =\n        options.sort && new ContentType().hasOwnProperty(options.sort.replace('-', '')) ? options.sort : '-id';\n      const field = options.sort.replace('-', '');\n      if (options.sort)\n        if (options.sort[0] === '-') {\n          qb = qb.orderBy('contentType.' + field, 'DESC');\n        } else {\n          qb = qb.orderBy('contentType.' + field, 'ASC');\n        }\n      qb = qb.skip((options.curPage - 1) * options.perPage).take(options.perPage);\n      objects = await qb.getManyAndCount();\n      return {\n        contentTypes: objects[0],\n        meta: {\n          perPage: options.perPage,\n          totalPages: options.perPage > objects[1] ? 1 : Math.ceil(objects[1] / options.perPage),\n          totalResults: objects[1],\n          curPage: options.curPage\n        }\n      };\n    } catch (error) {\n      throw error;\n    }\n  }\n}\n"]}