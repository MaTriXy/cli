{"version":3,"file":"oauth-tokens-accesstokens.service.js","sourceRoot":"","sources":["../../../../libs/rucken/auth-nestjs/src/services/oauth-tokens-accesstokens.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Inject, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { OauthTokensAccesstoken } from '../entities/oauth-tokens-accesstoken.entity';\nimport { CORE_CONFIG_TOKEN, ICoreConfig } from '@rucken/core-nestjs';\n\n@Injectable()\nexport class OauthTokensAccesstokensService {\n  constructor(\n    @Inject(CORE_CONFIG_TOKEN) private readonly coreConfig: ICoreConfig,\n    @InjectRepository(OauthTokensAccesstoken)\n    private readonly repository: Repository<OauthTokensAccesstoken>\n  ) {}\n\n  async create(options: { item: OauthTokensAccesstoken }) {\n    try {\n      options.item = await this.repository.save(options.item);\n      return { oauthTokensAccesstoken: options.item };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async update(options: { id: number; item: OauthTokensAccesstoken }) {\n    options.item.id = options.id;\n    try {\n      options.item = await this.repository.save(options.item);\n      return { oauthTokensAccesstoken: options.item };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async delete(options: { id: number }) {\n    try {\n      let item = await this.repository.findOneOrFail(options.id);\n      item = await this.repository.save(item);\n      await this.repository.delete(options.id);\n      return { oauthTokensAccesstoken: null };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async findByProviderClientId(options: { id: number }) {\n    try {\n      const item = await this.repository.findOneOrFail({\n        where: {\n          providerClientId: options.id\n        }\n      });\n      return { oauthTokensAccesstoken: item };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async findById(options: { id: number }) {\n    try {\n      const item = await this.repository.findOneOrFail(options.id);\n      return { oauthTokensAccesstoken: item };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async findAll(options: { curPage: number; perPage: number; q?: string; sort?: string }) {\n    try {\n      let objects: [OauthTokensAccesstoken[], number];\n      let qb = this.repository.createQueryBuilder('oauthTokensAccesstoken');\n      if (options.q) {\n        qb = qb.where(\n          'oauthTokensAccesstoken.name like :q or oauthTokensAccesstoken.title like :q or oauthTokensAccesstoken.id = :id',\n          {\n            q: `%${options.q}%`,\n            id: +options.q\n          }\n        );\n      }\n      options.sort =\n        options.sort && new OauthTokensAccesstoken().hasOwnProperty(options.sort.replace('-', ''))\n          ? options.sort\n          : '-id';\n      const field = options.sort.replace('-', '');\n      if (options.sort) {\n        if (options.sort[0] === '-') {\n          qb = qb.orderBy('oauthTokensAccesstoken.' + field, 'DESC');\n        } else {\n          qb = qb.orderBy('oauthTokensAccesstoken.' + field, 'ASC');\n        }\n      }\n      qb = qb.skip((options.curPage - 1) * options.perPage).take(options.perPage);\n      objects = await qb.getManyAndCount();\n      return {\n        contentTypes: objects[0],\n        meta: {\n          perPage: options.perPage,\n          totalPages: options.perPage > objects[1] ? 1 : Math.ceil(objects[1] / options.perPage),\n          totalResults: objects[1],\n          curPage: options.curPage\n        }\n      };\n    } catch (error) {\n      throw error;\n    }\n  }\n}\n"]}