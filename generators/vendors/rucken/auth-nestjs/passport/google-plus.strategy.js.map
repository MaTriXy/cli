{"version":3,"file":"google-plus.strategy.js","sourceRoot":"","sources":["../../../../libs/rucken/auth-nestjs/src/passport/google-plus.strategy.ts"],"names":[],"mappings":"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","sourcesContent":["import { Inject, Injectable } from '@nestjs/common';\nimport { plainToClass } from 'class-transformer';\nimport { use } from 'passport';\nimport * as GoogleTokenStrategy from 'passport-google-plus-token';\nimport { GOOGLE_PLUS_CONFIG_TOKEN } from '../configs/google-plus.config';\nimport { SignUpDto } from '../dto/sign-up.dto';\nimport { OauthTokensAccesstoken } from '../entities/oauth-tokens-accesstoken.entity';\nimport { IGooglePlusConfig } from '../interfaces/google-plus-config.interface';\nimport { AuthService } from '../services/auth.service';\nimport { OauthTokensAccesstokensService } from '../services/oauth-tokens-accesstokens.service';\n\n@Injectable()\nexport class GooglePlusStrategy {\n  constructor(\n    @Inject(GOOGLE_PLUS_CONFIG_TOKEN)\n    private readonly googlePlusConfig: IGooglePlusConfig,\n    private readonly oauthTokensAccesstokensService: OauthTokensAccesstokensService,\n    private readonly authService: AuthService\n  ) {\n    this.init();\n  }\n\n  private init(): void {\n    use(\n      'google',\n      new GoogleTokenStrategy(\n        {\n          clientID: this.googlePlusConfig.client_id,\n          clientSecret: this.googlePlusConfig.client_secret\n        },\n        async (accessToken: string, refreshToken: string, profile: any, done) => {\n          // Logger.log(JSON.stringify(profile), GooglePlusStrategy.name);\n          if (!profile.id) {\n            done(null, null);\n          }\n          try {\n            try {\n              const { oauthTokensAccesstoken } = await this.oauthTokensAccesstokensService.findByProviderClientId({\n                id: profile.id\n              });\n              const { user } = await this.authService.info({\n                id: oauthTokensAccesstoken.user.id\n              });\n              done(null, user);\n            } catch (err) {\n              const email =\n                profile.emails && profile.emails.length && profile.emails[0].value\n                  ? profile.emails[0].value\n                  : `${profile.id}@google.com`;\n              const username = `google_${profile.id}`;\n              const firstName = profile.name ? profile.name.givenName : `google_${profile.id}`;\n              const lastName = profile.name ? profile.name.familyName : `google_${profile.id}`;\n              const password = `google_${profile.id}`;\n              const { user } = await this.authService.signUp(\n                plainToClass(SignUpDto, {\n                  email,\n                  username,\n                  password,\n                  firstName,\n                  lastName\n                })\n              );\n              const newOauthTokensAccesstoken = new OauthTokensAccesstoken();\n              newOauthTokensAccesstoken.user = user;\n              newOauthTokensAccesstoken.providerClientId = profile.id;\n              newOauthTokensAccesstoken.provider = profile.provider;\n              newOauthTokensAccesstoken.accessToken = accessToken;\n              await this.oauthTokensAccesstokensService.create({\n                item: newOauthTokensAccesstoken\n              });\n              done(null, user);\n            }\n          } catch (err) {\n            done(err, null);\n          }\n        }\n      )\n    );\n  }\n}\n"]}